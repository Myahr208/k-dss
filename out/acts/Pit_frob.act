behaviour frob of Pit
interface frob(bytes32 ilk, int256 dink, int256 dart)

types

    Can_d  : uint256
    Can_f  : uint256
    Drip   : address Dripper
    Repo   : uint256
    Vow    : bytes32
    Tax    : uint256
    Rho    : uint48
    Live   : uint256
    Line   : uint256
    Vat    : address VatLike
    Spot   : uint256
    Line_i : uint256
    Ink_i  : uint256
    Art_i  : uint256
    Ink_u  : uint256
    Art_u  : uint256
    Take   : uint256
    Rate   : uint256
    Gem_u  : uint256
    Dai    : uint256
    Debt   : uint256

storage

    #Pit.drip           |-> Drip
    #Pit.live           |-> Live
    #Pit.Line           |-> Line
    #Pit.vat            |-> Vat
    #Pit.ilks[ilk].line |-> Line_i
    #Pit.ilks[ilk].spot |-> Spot

storage Drip

    #Drip.vat           |-> Vat
    #Drip.repo          |-> Repo
    #Drip.ilks[ilk].vow |-> Vow
    #Drip.ilks[ilk].tax |-> Tax
    #Drip.ilks[ilk].rho |-> Rho => TIME

storage Vat


    #Vat.wards(Drip)              |-> Can_drip
    #Vat.ilks[ilk].rate           |-> Rate => Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)
    #Vat.dai(Vow)                 |-> Dai  => Dai + Art_i * (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)
    #Vat.wards[ACCT_ID]           |-> Can_frob
    #Vat.ilks[ilk].take           |-> Take
    #Vat.ilks[ilk].Ink            |-> Ink_i  => Ink_i + dink
    #Vat.ilks[ilk].Art            |-> Art_i  => Art_i + dart
    #Vat.urns[ilk][CALLER_ID].ink |-> Ink_u  => Ink_u + dink
    #Vat.urns[ilk][CALLER_ID].art |-> Art_u  => Art_u + dart
    #Vat.gem[ilk][CALLER_ID]      |-> Gem_u  => Gem_u - Take * dink
    #Vat.dai[CALLER_ID]           |-> Dai    => Dai + (Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)) * dart
    #Vat.debt                     |-> Debt   => Debt + Art_i * (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate) + (Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)) * dart

iff

    Can_drip == 1
    Can_frob == 1
    TIME >= Rho
    (Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)) =/= 0
    (((((Art_u + dart) * (Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate))) <= (#Ray * Spot)) and (((Debt + ((Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)) * dart))) < (#Ray * Line))) or (dart <= 0))
    (((dart <= 0) and (dink >= 0)) or (((Ink_u + dink) * Spot) >= ((Art_u + dart) * (Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)))))
    Live == 1

iff in range uint256

    Repo + Tax
    #rpow(Repo + Tax, TIME - Rho, #Ray) * #Ray
    #rpow(Repo + Tax, TIME - Rho, #Ray) * Rate
    Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)
    Dai + Art_i * (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)
    Debt + Art_i * (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)
    Ink_i + dink
    Art_i + dart
    Ink_u + dink
    Art_u + dart
    Gem_u - Take * dink
    Dai + ((Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)) * dart)
    Debt + ((Rate + (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)) * dart)
    (Art_u + dart) * Rate
    (Ink_u + dink) * Spot
    #Ray * Spot
    #Ray * Line

iff in range int256

    Art_i
    #rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate
    Art_i * (#rmul(#rpow(Repo + Tax, TIME - Rho, #Ray), Rate) - Rate)
    Take
    Take * dink
    Rate
    Rate * dart

if

    CALLER_ID =/= Vow
    VGas > 300000
