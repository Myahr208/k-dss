requires "../rules.k"

module PROOF-DRIP_FILE-VOW_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// file-vow
rule
  <k> #execute => #halt </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> .WordStack </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103fa565b805460405260206040f35b6365fae35e8114156100885761006b6103e3565b1561007557600080fd5b61008260043560006103fa565b60018155005b639c52a7f18114156100b95761009c6103e3565b156100a657600080fd5b6100b360043560006103fa565b60008155005b63d9638d368114156100e4576100d260043560016103fa565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b6631958114156101895761015b60043560016103fa565b6000815414151561016b57600080fd5b6b033b2e3c9fd0803ce80000008155610182610376565b6001820155005b631a0b287e8114156101ed576101a260043560016103fa565b6101aa610376565b60018201541415156101bb57600080fd5b7f746178000000000000000000000000000000000000000000000000000000000060243514156101eb5760443581555b005b6329ae811481141561022c577f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561026b577f766f7700000000000000000000000000000000000000000000000000000000006004351415610269576024356003555b005b6344e2a5a88114156103715761028460043560016103fa565b61028c610376565b81546001830154808310156102a057600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102e357600080fd5b6020516b033b2e3c9fd0803ce800000061031d826103188461031385888b0361030e8b600454610411565b610464565b61042b565b6103bb565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561036957600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103b357600080fd5b600051905090565b6000808212156103ca57600080fd5b60008312156103d857600080fd5b828203905092915050565b60006103f03360006103fa565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561042557600080fd5b92915050565b6000828202905060008314151561044d578183820414151561044c57600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b6000816000811461050c57600284066000811461048357839250610487565b8592505b50600285046002850494505b841561050657838402848582041415156104ac57600080fd5b818101818110156104bc57600080fd5b878104955060028706156104f95785850285878204141587151516156104e157600080fd5b838101818110156104f157600080fd5b898104965050505b5050600285049450610493565b50610524565b836000811461051e5760009250610522565b8592505b505b5093925050505600a165627a7a72305820e535583cb49b12874ec219bc15dcde70e816cbfa94cbdff201fbcf555d360d3e0029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103fa565b805460405260206040f35b6365fae35e8114156100885761006b6103e3565b1561007557600080fd5b61008260043560006103fa565b60018155005b639c52a7f18114156100b95761009c6103e3565b156100a657600080fd5b6100b360043560006103fa565b60008155005b63d9638d368114156100e4576100d260043560016103fa565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b6631958114156101895761015b60043560016103fa565b6000815414151561016b57600080fd5b6b033b2e3c9fd0803ce80000008155610182610376565b6001820155005b631a0b287e8114156101ed576101a260043560016103fa565b6101aa610376565b60018201541415156101bb57600080fd5b7f746178000000000000000000000000000000000000000000000000000000000060243514156101eb5760443581555b005b6329ae811481141561022c577f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561026b577f766f7700000000000000000000000000000000000000000000000000000000006004351415610269576024356003555b005b6344e2a5a88114156103715761028460043560016103fa565b61028c610376565b81546001830154808310156102a057600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102e357600080fd5b6020516b033b2e3c9fd0803ce800000061031d826103188461031385888b0361030e8b600454610411565b610464565b61042b565b6103bb565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561036957600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103b357600080fd5b600051905090565b6000808212156103ca57600080fd5b60008312156103d857600080fd5b828203905092915050565b60006103f03360006103fa565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561042557600080fd5b92915050565b6000828202905060008314151561044d578183820414151561044c57600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b6000816000811461050c57600284066000811461048357839250610487565b8592505b50600285046002850494505b841561050657838402848582041415156104ac57600080fd5b818101818110156104bc57600080fd5b878104955060028706156104f95785850285878204141587151516156104e157600080fd5b838101818110156104f157600080fd5b898104965050505b5050600285049450610493565b50610524565b836000811461051e5760009250610522565b8592505b505b5093925050505600a165627a7a72305820e535583cb49b12874ec219bc15dcde70e816cbfa94cbdff201fbcf555d360d3e0029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("file", #bytes32(ABI_what), #bytes32(ABI_data)) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> CALL_DEPTH => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103fa565b805460405260206040f35b6365fae35e8114156100885761006b6103e3565b1561007557600080fd5b61008260043560006103fa565b60018155005b639c52a7f18114156100b95761009c6103e3565b156100a657600080fd5b6100b360043560006103fa565b60008155005b63d9638d368114156100e4576100d260043560016103fa565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b6631958114156101895761015b60043560016103fa565b6000815414151561016b57600080fd5b6b033b2e3c9fd0803ce80000008155610182610376565b6001820155005b631a0b287e8114156101ed576101a260043560016103fa565b6101aa610376565b60018201541415156101bb57600080fd5b7f746178000000000000000000000000000000000000000000000000000000000060243514156101eb5760443581555b005b6329ae811481141561022c577f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561026b577f766f7700000000000000000000000000000000000000000000000000000000006004351415610269576024356003555b005b6344e2a5a88114156103715761028460043560016103fa565b61028c610376565b81546001830154808310156102a057600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102e357600080fd5b6020516b033b2e3c9fd0803ce800000061031d826103188461031385888b0361030e8b600454610411565b610464565b61042b565b6103bb565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561036957600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103b357600080fd5b600051905090565b6000808212156103ca57600080fd5b60008312156103d857600080fd5b828203905092915050565b60006103f03360006103fa565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561042557600080fd5b92915050565b6000828202905060008314151561044d578183820414151561044c57600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b6000816000811461050c57600284066000811461048357839250610487565b8592505b50600285046002850494505b841561050657838402848582041415156104ac57600080fd5b818101818110156104bc57600080fd5b878104955060028706156104f95785850285878204141587151516156104e157600080fd5b838101818110156104f157600080fd5b898104965050505b5050600285049450610493565b50610524565b836000811461051e5760009250610522565b8592505b505b5093925050505600a165627a7a72305820e535583cb49b12874ec219bc15dcde70e816cbfa94cbdff201fbcf555d360d3e0029") </code>
          <storage> #Drip.vow |-> (Vow => (#if ABI_what ==Int 12345 #then ABI_data #else Vow #fi))
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
andBool 0 <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
andBool 0 <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
  andBool #rangeBytes(32, ABI_what)
  andBool #rangeBytes(32, ABI_data)
  andBool #rangeBytes(32, Vow)

endmodule
