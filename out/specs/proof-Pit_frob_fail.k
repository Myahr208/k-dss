requires "../rules.k"

module PROOF-PIT_FROB_FAIL
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// frob
rule
  <k> #execute => #halt </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ => _ </output>
      <statusCode> _ => EVMC_REVERT </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006104c0565b805460405260206040f35b6365fae35e8114156100885761006b6104a9565b1561007557600080fd5b61008260043560006104c0565b60018155005b639c52a7f18114156100b95761009c6104a9565b156100a657600080fd5b6100b360043560006104c0565b60008155005b63d9638d368114156100e4576100d260043560016104c0565b80546040526001810154606052604080f35b63957aa58c8114156100fc5760025460405260206040f35b63babe8a3f8114156101145760035460405260206040f35b6336569e7781141561012c5760045460405260206040f35b639f678cca8114156101445760055460405260206040f35b63d4e8be83811415610195576101586104a9565b1561016257600080fd5b7f64726970000000000000000000000000000000000000000000000000000000006004351415610193576024356005555b005b6329ae81148114156101e6576101a96104a9565b156101b357600080fd5b7f4c696e650000000000000000000000000000000000000000000000000000000060043514156101e4576024356003555b005b631a0b287e811415610276576101fa6104a9565b1561020457600080fd5b61021160043560016104c0565b7f73706f740000000000000000000000000000000000000000000000000000000060243514156102415760443581555b7f6c696e650000000000000000000000000000000000000000000000000000000060243514156102745760443560018201555b005b635a984ded8114156104a4577f44e2a5a80000000000000000000000000000000000000000000000000000000060005260043560045260008060246000806005545af115156102c457600080fd5b7f5dd6471a0000000000000000000000000000000000000000000000000000000060005260043560045233602452336044523360645260243560845260443560a45260008060c46000806004545af1151561031e57600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526080600060246000806004545af1151561036157600080fd5b6000516020516020516040517f26e2748200000000000000000000000000000000000000000000000000000000600052600435600452336024526040600060446000806004545af115156103b457600080fd5b6000516020517f0dca59c1000000000000000000000000000000000000000000000000000000006000526020600060046000806004545af115156103f757600080fd5b60005161040760043560016104c0565b805460018201546104266b033b2e3c9fd0803ce80000006003546104d7565b841061043e6b033b2e3c9fd0803ce8000000836104d7565b6104488b8a6104d7565b11151660006044351315600060243512156104638c896104d7565b61046d868b6104d7565b1015600160025414151561048057600080fd5b60008d141561048e57600080fd5b80828416178385171615156104a257600080fd5b005b600080fd5b60006104b63360006104c0565b5460011415905090565b600082600052816020526040600020905092915050565b600082820290508183820414600084141715156104f357600080fd5b929150505600a165627a7a72305820f6ff7e9ed1bc2b27796a8479334f195a003edcc4454092bf11709b27f9cee09f0029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006104c0565b805460405260206040f35b6365fae35e8114156100885761006b6104a9565b1561007557600080fd5b61008260043560006104c0565b60018155005b639c52a7f18114156100b95761009c6104a9565b156100a657600080fd5b6100b360043560006104c0565b60008155005b63d9638d368114156100e4576100d260043560016104c0565b80546040526001810154606052604080f35b63957aa58c8114156100fc5760025460405260206040f35b63babe8a3f8114156101145760035460405260206040f35b6336569e7781141561012c5760045460405260206040f35b639f678cca8114156101445760055460405260206040f35b63d4e8be83811415610195576101586104a9565b1561016257600080fd5b7f64726970000000000000000000000000000000000000000000000000000000006004351415610193576024356005555b005b6329ae81148114156101e6576101a96104a9565b156101b357600080fd5b7f4c696e650000000000000000000000000000000000000000000000000000000060043514156101e4576024356003555b005b631a0b287e811415610276576101fa6104a9565b1561020457600080fd5b61021160043560016104c0565b7f73706f740000000000000000000000000000000000000000000000000000000060243514156102415760443581555b7f6c696e650000000000000000000000000000000000000000000000000000000060243514156102745760443560018201555b005b635a984ded8114156104a4577f44e2a5a80000000000000000000000000000000000000000000000000000000060005260043560045260008060246000806005545af115156102c457600080fd5b7f5dd6471a0000000000000000000000000000000000000000000000000000000060005260043560045233602452336044523360645260243560845260443560a45260008060c46000806004545af1151561031e57600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526080600060246000806004545af1151561036157600080fd5b6000516020516020516040517f26e2748200000000000000000000000000000000000000000000000000000000600052600435600452336024526040600060446000806004545af115156103b457600080fd5b6000516020517f0dca59c1000000000000000000000000000000000000000000000000000000006000526020600060046000806004545af115156103f757600080fd5b60005161040760043560016104c0565b805460018201546104266b033b2e3c9fd0803ce80000006003546104d7565b841061043e6b033b2e3c9fd0803ce8000000836104d7565b6104488b8a6104d7565b11151660006044351315600060243512156104638c896104d7565b61046d868b6104d7565b1015600160025414151561048057600080fd5b60008d141561048e57600080fd5b80828416178385171615156104a257600080fd5b005b600080fd5b60006104b63360006104c0565b5460011415905090565b600082600052816020526040600020905092915050565b600082820290508183820414600084141715156104f357600080fd5b929150505600a165627a7a72305820f6ff7e9ed1bc2b27796a8479334f195a003edcc4454092bf11709b27f9cee09f0029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("frob", #bytes32(ABI_ilk), #int256(ABI_dink), #int256(ABI_dart)) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID)
      SetItem(Drip)
      SetItem(Vat) </activeAccounts>
      <accounts>
        <account>
          <acctID> Drip </acctID>
          <balance> Drip_balance => _ </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103fa565b805460405260206040f35b6365fae35e8114156100885761006b6103e3565b1561007557600080fd5b61008260043560006103fa565b60018155005b639c52a7f18114156100b95761009c6103e3565b156100a657600080fd5b6100b360043560006103fa565b60008155005b63d9638d368114156100e4576100d260043560016103fa565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b6631958114156101895761015b60043560016103fa565b6000815414151561016b57600080fd5b6b033b2e3c9fd0803ce80000008155610182610376565b6001820155005b631a0b287e8114156101ed576101a260043560016103fa565b6101aa610376565b60018201541415156101bb57600080fd5b7f746178000000000000000000000000000000000000000000000000000000000060243514156101eb5760443581555b005b6329ae811481141561022c577f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561026b577f766f7700000000000000000000000000000000000000000000000000000000006004351415610269576024356003555b005b6344e2a5a88114156103715761028460043560016103fa565b61028c610376565b81546001830154808310156102a057600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102e357600080fd5b6020516b033b2e3c9fd0803ce800000061031d826103188461031385888b0361030e8b600454610411565b610464565b61042b565b6103bb565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561036957600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103b357600080fd5b600051905090565b6000808212156103ca57600080fd5b60008312156103d857600080fd5b828203905092915050565b60006103f03360006103fa565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561042557600080fd5b92915050565b6000828202905060008314151561044d578183820414151561044c57600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b6000816000811461050c57600284066000811461048357839250610487565b8592505b50600285046002850494505b841561050657838402848582041415156104ac57600080fd5b818101818110156104bc57600080fd5b878104955060028706156104f95785850285878204141587151516156104e157600080fd5b838101818110156104f157600080fd5b898104965050505b5050600285049450610493565b50610524565b836000811461051e5760009250610522565b8592505b505b5093925050505600a165627a7a72305820e535583cb49b12874ec219bc15dcde70e816cbfa94cbdff201fbcf555d360d3e0029") </code>
          <storage> #Drip.vat |-> (Vat)
                      #Drip.repo |-> (Repo)
                      #Drip.ilks(ABI_ilk).vow |-> (Vow)
                      #Drip.ilks(ABI_ilk).tax |-> (Tax)
                      #Drip.ilks(ABI_ilk).rho |-> (Rho => _ )
                      _:Map </storage>
          <nonce> _ </nonce>
        </account>
        <account>
          <acctID> Vat </acctID>
          <balance> Vat_balance => _ </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c600435600061067e565b805460405260206040f35b6365fae35e8114156100885761006b610667565b1561007557600080fd5b610082600435600061067e565b60018155005b639c52a7f18114156100b95761009c610667565b156100a657600080fd5b6100b3600435600061067e565b60008155005b63d9638d368114156100f5576100d2600435600161067e565b805460405260018101546060526002810154608052600381015460a05260806040f35b6326e27482811415610123576101116024356004356002610695565b80546040526001810154606052604080f35b63c091268381141561014a5761013f6024356004356003610695565b805460405260206040f35b63f53e4e6981141561016e57610163600435600461067e565b805460405260206040f35b63a60f1d3e81141561019257610187600435600561067e565b805460405260206040f35b630dca59c18114156101aa5760065460405260206040f35b632d61a3558114156101c25760075460405260206040f35b633b663195811415610233576101d6610667565b156101e057600080fd5b6101ed600435600161067e565b600081541415156101fd57600080fd5b6000600182015414151561021057600080fd5b6b033b2e3c9fd0803ce800000081556b033b2e3c9fd0803ce80000006001820155005b6378f1947081141561028b57610247610667565b1561025157600080fd5b61025e600435600461067e565b61026b60443582546106f6565b815561027a602435600461067e565b61028760443582546106b9565b8155005b6342066cbb8114156102ca5761029f610667565b156102a957600080fd5b6102b96024356004356003610695565b6102c660443582546106b9565b8155005b63a6e41821811415610328576102de610667565b156102e857600080fd5b6102f86024356004356003610695565b61030560643582546106f6565b81556103176044356004356003610695565b61032460643582546106b9565b8155005b635dd6471a8114156104165761033c610667565b1561034657600080fd5b6103566024356004356002610695565b61036360843582546106b9565b815561037560a43560018301546106b9565b6001820155610387600435600161067e565b61039760843560028301546106b9565b60028201556103ac60a43560038301546106b9565b60038201556103be6084358254610733565b6103ce6044356004356003610695565b6103d98282546106f6565b81556103eb60a4356001850154610733565b6103f8606435600461067e565b6104038282546106b9565b8155610411826006546106b9565b600655005b633690ae4c8114156105045761042a610667565b1561043457600080fd5b6104446024356004356002610695565b61045160843582546106b9565b815561046360a43560018301546106b9565b6001820155610475600435600161067e565b61048560843560028301546106b9565b600282015561049a60a43560038301546106b9565b60038201556104ac6084358254610733565b6104bc6044356004356003610695565b6104c78282546106f6565b81556104d960a4356001850154610733565b6104e6606435600561067e565b6104f18282546106f6565b81556104ff826007546106f6565b600755005b63990a5f6381141561057e57610518610667565b1561052257600080fd5b61052f600435600561067e565b61053c60443582546106f6565b815561054b602435600461067e565b61055860443582546106f6565b81556105686044356007546106f6565b6007556105796044356006546106f6565b600655005b63e6a6a64d8114156105f957610592610667565b1561059c57600080fd5b6105a9600435600161067e565b6105b960443560018301546106b9565b60018201556105ce6044356003830154610733565b6105db602435600461067e565b6105e68282546106b9565b81556105f4826006546106b9565b600655005b6309b7a0b58114156106625761060d610667565b1561061757600080fd5b610624600435600161067e565b61063160443582546106b9565b81556106436044356002830154610733565b6106536024356004356003610695565b61065e8282546106f6565b8155005b600080fd5b600061067433600061067e565b5460011415905090565b600082600052816020526040600020905092915050565b60008360005282602052816040526040602020602052604060002090509392505050565b6000828201905060008313156106d85781811115156106d757600080fd5b5b60008312156106f05781811015156106ef57600080fd5b5b92915050565b60008282039050600083121561071557818111151561071457600080fd5b5b600083131561072d57818110151561072c57600080fd5b5b92915050565b60008282029050600082121561074857600080fd5b600083141515610763578183820514151561076257600080fd5b5b929150505600a165627a7a723058201fcd622e26e92262e34259d46a2cb321a6b6f16f239ee5bf5a42f6e2b76c16ac0029") </code>
          <storage> #Vat.wards(Drip) |-> (Can_drip)
                      #Vat.ilks(ABI_ilk).rate |-> (Rate => _ )
                      #Vat.dai(Vow) |-> (Dai => _ )
                      #Vat.wards(ACCT_ID) |-> (Can_frob)
                      #Vat.ilks(ABI_ilk).take |-> (Take)
                      #Vat.ilks(ABI_ilk).Ink |-> (Ink_i => _ )
                      #Vat.ilks(ABI_ilk).Art |-> (Art_i => _ )
                      #Vat.urns(ABI_ilk, CALLER_ID).ink |-> (Ink_u => _ )
                      #Vat.urns(ABI_ilk, CALLER_ID).art |-> (Art_u => _ )
                      #Vat.gem(ABI_ilk, CALLER_ID) |-> (Gem_u => _ )
                      #Vat.dai(CALLER_ID) |-> (Dai => _ )
                      #Vat.debt |-> (Debt => _ )
                      _:Map </storage>
          <nonce> _ </nonce>
        </account>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006104c0565b805460405260206040f35b6365fae35e8114156100885761006b6104a9565b1561007557600080fd5b61008260043560006104c0565b60018155005b639c52a7f18114156100b95761009c6104a9565b156100a657600080fd5b6100b360043560006104c0565b60008155005b63d9638d368114156100e4576100d260043560016104c0565b80546040526001810154606052604080f35b63957aa58c8114156100fc5760025460405260206040f35b63babe8a3f8114156101145760035460405260206040f35b6336569e7781141561012c5760045460405260206040f35b639f678cca8114156101445760055460405260206040f35b63d4e8be83811415610195576101586104a9565b1561016257600080fd5b7f64726970000000000000000000000000000000000000000000000000000000006004351415610193576024356005555b005b6329ae81148114156101e6576101a96104a9565b156101b357600080fd5b7f4c696e650000000000000000000000000000000000000000000000000000000060043514156101e4576024356003555b005b631a0b287e811415610276576101fa6104a9565b1561020457600080fd5b61021160043560016104c0565b7f73706f740000000000000000000000000000000000000000000000000000000060243514156102415760443581555b7f6c696e650000000000000000000000000000000000000000000000000000000060243514156102745760443560018201555b005b635a984ded8114156104a4577f44e2a5a80000000000000000000000000000000000000000000000000000000060005260043560045260008060246000806005545af115156102c457600080fd5b7f5dd6471a0000000000000000000000000000000000000000000000000000000060005260043560045233602452336044523360645260243560845260443560a45260008060c46000806004545af1151561031e57600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526080600060246000806004545af1151561036157600080fd5b6000516020516020516040517f26e2748200000000000000000000000000000000000000000000000000000000600052600435600452336024526040600060446000806004545af115156103b457600080fd5b6000516020517f0dca59c1000000000000000000000000000000000000000000000000000000006000526020600060046000806004545af115156103f757600080fd5b60005161040760043560016104c0565b805460018201546104266b033b2e3c9fd0803ce80000006003546104d7565b841061043e6b033b2e3c9fd0803ce8000000836104d7565b6104488b8a6104d7565b11151660006044351315600060243512156104638c896104d7565b61046d868b6104d7565b1015600160025414151561048057600080fd5b60008d141561048e57600080fd5b80828416178385171615156104a257600080fd5b005b600080fd5b60006104b63360006104c0565b5460011415905090565b600082600052816020526040600020905092915050565b600082820290508183820414600084141715156104f357600080fd5b929150505600a165627a7a72305820f6ff7e9ed1bc2b27796a8479334f195a003edcc4454092bf11709b27f9cee09f0029") </code>
          <storage> #Pit.drip |-> (Drip)
                          #Pit.live |-> (Live)
                          #Pit.Line |-> (Line)
                          #Pit.vat |-> (Vat)
                          #Pit.ilks(ABI_ilk).line |-> (Line_i)
                          #Pit.ilks(ABI_ilk).spot |-> (Spot)
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <Int 1024
  andBool #rangeBytes(32, ABI_ilk)
  andBool #rangeSInt(256, ABI_dink)
  andBool #rangeSInt(256, ABI_dart)
  andBool #rangeUInt(256, Can_d)
  andBool #rangeUInt(256, Can_f)
  andBool #rangeAddress(Drip)
  andBool #rangeUInt(256, Repo)
  andBool #rangeBytes(32, Vow)
  andBool #rangeUInt(256, Tax)
  andBool #rangeUInt(48, Rho)
  andBool #rangeUInt(256, Live)
  andBool #rangeUInt(256, Line)
  andBool #rangeAddress(Vat)
  andBool #rangeUInt(256, Spot)
  andBool #rangeUInt(256, Line_i)
  andBool #rangeUInt(256, Ink_i)
  andBool #rangeUInt(256, Art_i)
  andBool #rangeUInt(256, Ink_u)
  andBool #rangeUInt(256, Art_u)
  andBool #rangeUInt(256, Take)
  andBool #rangeUInt(256, Rate)
  andBool #rangeUInt(256, Gem_u)
  andBool #rangeUInt(256, Dai)
  andBool #rangeUInt(256, Debt)
  andBool #rangeUInt(256, Drip_balance)
  andBool #rangeUInt(256, Vat_balance)
  andBool #notPrecompileAddress(Drip)
  andBool ACCT_ID =/=Int Drip
  andBool #notPrecompileAddress(Vat)
  andBool ACCT_ID =/=Int Vat
  andBool CALLER_ID =/=Int Vow
  andBool VGas >Int 300000
  andBool notBool (
            Can_drip ==Int 1
    andBool Can_frob ==Int 1
    andBool TIME >=Int Rho
    andBool (Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate)) =/=Int 0
    andBool (((((Art_u +Int ABI_dart) *Int (Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate))) <=Int (#Ray *Int Spot)) andBool (((Debt +Int ((Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate)) *Int ABI_dart))) <Int (#Ray *Int Line))) orBool (ABI_dart <=Int 0))
    andBool (((ABI_dart <=Int 0) andBool (ABI_dink >=Int 0)) orBool (((Ink_u +Int ABI_dink) *Int Spot) >=Int ((Art_u +Int ABI_dart) *Int (Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate)))))
    andBool Live ==Int 1
    andBool #rangeUInt(256, Repo +Int Tax)
    andBool #rangeUInt(256, #rpow(Repo +Int Tax, TIME -Int Rho, #Ray) *Int #Ray)
    andBool #rangeUInt(256, #rpow(Repo +Int Tax, TIME -Int Rho, #Ray) *Int Rate)
    andBool #rangeUInt(256, Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate))
    andBool #rangeUInt(256, Dai +Int Art_i *Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate))
    andBool #rangeUInt(256, Debt +Int Art_i *Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate))
    andBool #rangeUInt(256, Ink_i +Int ABI_dink)
    andBool #rangeUInt(256, Art_i +Int ABI_dart)
    andBool #rangeUInt(256, Ink_u +Int ABI_dink)
    andBool #rangeUInt(256, Art_u +Int ABI_dart)
    andBool #rangeUInt(256, Gem_u -Int Take *Int ABI_dink)
    andBool #rangeUInt(256, Dai +Int ((Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate)) *Int ABI_dart))
    andBool #rangeUInt(256, Debt +Int ((Rate +Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate)) *Int ABI_dart))
    andBool #rangeUInt(256, (Art_u +Int ABI_dart) *Int Rate)
    andBool #rangeUInt(256, (Ink_u +Int ABI_dink) *Int Spot)
    andBool #rangeUInt(256, #Ray *Int Spot)
    andBool #rangeUInt(256, #Ray *Int Line)
    andBool #rangeSInt(256, Art_i)
    andBool #rangeSInt(256, #rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate)
    andBool #rangeSInt(256, Art_i *Int (#rmul(#rpow(Repo +Int Tax, TIME -Int Rho, #Ray), Rate) -Int Rate))
    andBool #rangeSInt(256, Take)
    andBool #rangeSInt(256, Take *Int ABI_dink)
    andBool #rangeSInt(256, Rate)
    andBool #rangeSInt(256, Rate *Int ABI_dart)
  )

endmodule
