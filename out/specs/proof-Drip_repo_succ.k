requires "../rules.k"

module PROOF-DRIP_REPO_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// Drip_repo
rule
  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ => #asByteStackInWidthaux(Repo, 31, 32, .WordStack) </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103c0565b805460405260206040f35b6365fae35e8114156100885761006b6103a9565b1561007557600080fd5b61008260043560006103c0565b60018155005b639c52a7f18114156100b95761009c6103a9565b156100a657600080fd5b6100b360043560006103c0565b60008155005b63d9638d368114156100e4576100d260043560016103c0565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b633b66319581141561017e576101406103a9565b1561014a57600080fd5b61015760043560016103c0565b6000815414151561016757600080fd5b6b033b2e3c9fd0803ce80000008155426001820155005b631a0b287e8114156101db576101926103a9565b1561019c57600080fd5b6101a960043560016103c0565b7f746178000000000000000000000000000000000000000000000000000000000060243514156101d95760443581555b005b6329ae811481141561022c576101ef6103a9565b156101f957600080fd5b7f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561027d576102406103a9565b1561024a57600080fd5b7f766f770000000000000000000000000000000000000000000000000000000000600435141561027b576024356003555b005b6344e2a5a881141561037c5761029660043560016103c0565b4281546001830154808310156102ab57600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102ee57600080fd5b6020516b033b2e3c9fd0803ce8000000610328826103238461031e85888b036103198b6004546103d7565b61042a565b6103f1565b610381565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561037457600080fd5b856001880155005b600080fd5b60008082121561039057600080fd5b600083121561039e57600080fd5b828203905092915050565b60006103b63360006103c0565b5460011415905090565b600082600052816020526040600020905092915050565b60008282019050818110156103eb57600080fd5b92915050565b60008282029050600083141515610413578183820414151561041257600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b600081600081146104d25760028406600081146104495783925061044d565b8592505b50600285046002850494505b84156104cc578384028485820414151561047257600080fd5b8181018181101561048257600080fd5b878104955060028706156104bf5785850285878204141587151516156104a757600080fd5b838101818110156104b757600080fd5b898104965050505b5050600285049450610459565b506104ea565b83600081146104e457600092506104e8565b8592505b505b5093925050505600a165627a7a723058200b08432847742d8909a9432686e9522820323903ab31e6f1e6cdc310910f7dd40029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103c0565b805460405260206040f35b6365fae35e8114156100885761006b6103a9565b1561007557600080fd5b61008260043560006103c0565b60018155005b639c52a7f18114156100b95761009c6103a9565b156100a657600080fd5b6100b360043560006103c0565b60008155005b63d9638d368114156100e4576100d260043560016103c0565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b633b66319581141561017e576101406103a9565b1561014a57600080fd5b61015760043560016103c0565b6000815414151561016757600080fd5b6b033b2e3c9fd0803ce80000008155426001820155005b631a0b287e8114156101db576101926103a9565b1561019c57600080fd5b6101a960043560016103c0565b7f746178000000000000000000000000000000000000000000000000000000000060243514156101d95760443581555b005b6329ae811481141561022c576101ef6103a9565b156101f957600080fd5b7f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561027d576102406103a9565b1561024a57600080fd5b7f766f770000000000000000000000000000000000000000000000000000000000600435141561027b576024356003555b005b6344e2a5a881141561037c5761029660043560016103c0565b4281546001830154808310156102ab57600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102ee57600080fd5b6020516b033b2e3c9fd0803ce8000000610328826103238461031e85888b036103198b6004546103d7565b61042a565b6103f1565b610381565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561037457600080fd5b856001880155005b600080fd5b60008082121561039057600080fd5b600083121561039e57600080fd5b828203905092915050565b60006103b63360006103c0565b5460011415905090565b600082600052816020526040600020905092915050565b60008282019050818110156103eb57600080fd5b92915050565b60008282029050600083141515610413578183820414151561041257600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b600081600081146104d25760028406600081146104495783925061044d565b8592505b50600285046002850494505b84156104cc578384028485820414151561047257600080fd5b8181018181101561048257600080fd5b878104955060028706156104bf5785850285878204141587151516156104a757600080fd5b838101818110156104b757600080fd5b898104965050505b5050600285049450610459565b506104ea565b83600081146104e457600092506104e8565b8592505b505b5093925050505600a165627a7a723058200b08432847742d8909a9432686e9522820323903ab31e6f1e6cdc310910f7dd40029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("repo", .TypedArgs) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) _ </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c60043560006103c0565b805460405260206040f35b6365fae35e8114156100885761006b6103a9565b1561007557600080fd5b61008260043560006103c0565b60018155005b639c52a7f18114156100b95761009c6103a9565b156100a657600080fd5b6100b360043560006103c0565b60008155005b63d9638d368114156100e4576100d260043560016103c0565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b633b66319581141561017e576101406103a9565b1561014a57600080fd5b61015760043560016103c0565b6000815414151561016757600080fd5b6b033b2e3c9fd0803ce80000008155426001820155005b631a0b287e8114156101db576101926103a9565b1561019c57600080fd5b6101a960043560016103c0565b7f746178000000000000000000000000000000000000000000000000000000000060243514156101d95760443581555b005b6329ae811481141561022c576101ef6103a9565b156101f957600080fd5b7f7265706f00000000000000000000000000000000000000000000000000000000600435141561022a576024356004555b005b63e9b674b981141561027d576102406103a9565b1561024a57600080fd5b7f766f770000000000000000000000000000000000000000000000000000000000600435141561027b576024356003555b005b6344e2a5a881141561037c5761029660043560016103c0565b4281546001830154808310156102ab57600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af115156102ee57600080fd5b6020516b033b2e3c9fd0803ce8000000610328826103238461031e85888b036103198b6004546103d7565b61042a565b6103f1565b610381565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af1151561037457600080fd5b856001880155005b600080fd5b60008082121561039057600080fd5b600083121561039e57600080fd5b828203905092915050565b60006103b63360006103c0565b5460011415905090565b600082600052816020526040600020905092915050565b60008282019050818110156103eb57600080fd5b92915050565b60008282029050600083141515610413578183820414151561041257600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b600081600081146104d25760028406600081146104495783925061044d565b8592505b50600285046002850494505b84156104cc578384028485820414151561047257600080fd5b8181018181101561048257600080fd5b878104955060028706156104bf5785850285878204141587151516156104a757600080fd5b838101818110156104b757600080fd5b898104965050505b5050600285049450610459565b506104ea565b83600081146104e457600092506104e8565b8592505b505b5093925050505600a165627a7a723058200b08432847742d8909a9432686e9522820323903ab31e6f1e6cdc310910f7dd40029") </code>
          <storage> (_:Map
                      (#Drip.repo |-> (Repo)))
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <=Int 1024

    andBool (#rangeUInt(256, Repo)
    andBool (VGas >Int 300000))

endmodule
