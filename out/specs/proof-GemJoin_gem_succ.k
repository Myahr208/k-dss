requires "../rules.k"

module PROOF-GEMJOIN_GEM_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// gem
rule
  <k> #execute => #halt </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ => #asByteStackInWidthaux(Gem, 31, 32, .WordStack) </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c0100000000000000000000000000000000000000000000000000000000600035046336569e7781141561004b5760005460405260206040f35b63c5ce281e8114156100635760015460405260206040f35b637bd2bea781141561007b5760025460405260206040f35b63e5009bb68114156101375761009f6b033b2e3c9fd0803ce80000006024356101fb565b7f23b872dd00000000000000000000000000000000000000000000000000000000600052336004523060245260243560445260008060646000806002545af115156100e957600080fd5b7f42066cbb000000000000000000000000000000000000000000000000000000006000526001546004526004356024528060445260008060646000806000545af1151561013557600080fd5b005b63ef693bed8114156101f65761015b6b033b2e3c9fd0803ce80000006024356101fb565b7f23b872dd000000000000000000000000000000000000000000000000000000006000523060045260043560245260243560445260008060646000806002545af115156101a757600080fd5b7f42066cbb00000000000000000000000000000000000000000000000000000000600052600154600452336024528060000360445260008060646000806000545af115156101f457600080fd5b005b600080fd5b600082820290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082111561023057600080fd5b82848304146000851417151561024557600080fd5b50929150505600a165627a7a7230582022fb60b1d0dd00bb0fabf952fd958f71ba0c64200c5dfdcb6ed7c1db909da9440029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c0100000000000000000000000000000000000000000000000000000000600035046336569e7781141561004b5760005460405260206040f35b63c5ce281e8114156100635760015460405260206040f35b637bd2bea781141561007b5760025460405260206040f35b63e5009bb68114156101375761009f6b033b2e3c9fd0803ce80000006024356101fb565b7f23b872dd00000000000000000000000000000000000000000000000000000000600052336004523060245260243560445260008060646000806002545af115156100e957600080fd5b7f42066cbb000000000000000000000000000000000000000000000000000000006000526001546004526004356024528060445260008060646000806000545af1151561013557600080fd5b005b63ef693bed8114156101f65761015b6b033b2e3c9fd0803ce80000006024356101fb565b7f23b872dd000000000000000000000000000000000000000000000000000000006000523060045260043560245260243560445260008060646000806002545af115156101a757600080fd5b7f42066cbb00000000000000000000000000000000000000000000000000000000600052600154600452336024528060000360445260008060646000806000545af115156101f457600080fd5b005b600080fd5b600082820290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082111561023057600080fd5b82848304146000851417151561024557600080fd5b50929150505600a165627a7a7230582022fb60b1d0dd00bb0fabf952fd958f71ba0c64200c5dfdcb6ed7c1db909da9440029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("gem", .TypedArgs) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> CALL_DEPTH => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c0100000000000000000000000000000000000000000000000000000000600035046336569e7781141561004b5760005460405260206040f35b63c5ce281e8114156100635760015460405260206040f35b637bd2bea781141561007b5760025460405260206040f35b63e5009bb68114156101375761009f6b033b2e3c9fd0803ce80000006024356101fb565b7f23b872dd00000000000000000000000000000000000000000000000000000000600052336004523060245260243560445260008060646000806002545af115156100e957600080fd5b7f42066cbb000000000000000000000000000000000000000000000000000000006000526001546004526004356024528060445260008060646000806000545af1151561013557600080fd5b005b63ef693bed8114156101f65761015b6b033b2e3c9fd0803ce80000006024356101fb565b7f23b872dd000000000000000000000000000000000000000000000000000000006000523060045260043560245260243560445260008060646000806002545af115156101a757600080fd5b7f42066cbb00000000000000000000000000000000000000000000000000000000600052600154600452336024528060000360445260008060646000806000545af115156101f457600080fd5b005b600080fd5b600082820290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082111561023057600080fd5b82848304146000851417151561024557600080fd5b50929150505600a165627a7a7230582022fb60b1d0dd00bb0fabf952fd958f71ba0c64200c5dfdcb6ed7c1db909da9440029") </code>
          <storage> #GemJoin.gem |-> (Gem)
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
andBool 0 <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
andBool 0 <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
  andBool #rangeAddress(Gem)

endmodule
