[move]
k: #execute => #halt
statusCode: _ => EVMC_REVERT
output: _ => _
callData: #abiCallData("move", #address(Src), #address(Dst), #uint256(Wad))
localMem: _
pc: 0 => _
wordStack: .WordStack => _
gas: Gas => _
log: _
callDepth: _
refund: _ => _
storage:
0 |-> Root
(#hashedLocation("Solidity", 1, Src) |-> (#unsigned(Dai_s) => _)
(#hashedLocation("Solidity", 1, Dst) |-> (#unsigned(Dai_d) => _)
(#hashedLocation("Solidity", 2, Lad) |-> Sin_l
(#hashedLocation("Solidity", 3, I) |-> (#IlkStruct Rate_i Art_i)
(#hashedLocation("Solidity", 4, I Guy) |-> ((#UrnStruct #unsigned(Gem_u) Ink_u Art_u) => _)
5 |-> Tab
6 |-> Vice
  _:Map
activeaccounts:
accounts:
requires:
  andBool Gas >Int 100000
  
  // storage data
  andBool #rangeAddress(Lad)
  andBool #rangeSInt(256, Dai_s)
  andBool #rangeSInt(256, Sin_d)
  andBool #rangeSInt(256, Sin_l)
  andBool #rangeSInt(256, Rate_i)
  andBool #rangeSInt(256, Art_i)
  andBool #rangeSInt(256, Gem_u)
  andBool #rangeSInt(256, Ink_u)
  andBool #rangeSInt(256, Art_u)
  andBool #rangeSInt(256, Tab)
  andBool #rangeSInt(256, Vice)

  // call data
  andBool #rangeAddress(Src)
  andBool #rangeAddress(Dst)
  andBool #rangeUInt(256, Wad)

  // success conditions (in order):
  notBool (
    andBool (Dai_s >=Int Wad)
    andBool #rangeSInt(256, Dai_s -Int Wad)
    andBool #rangeSInt(256, Dai_d +Int Wad)
  )

attribute:

