[file]
k: #execute => #halt
statusCode: _ => EVMC_SUCCESS
output: _ => _
callData: #abiCallData("file", #bytes32(I), #bytes32(What), #int256(Risk))
localMem: _
pc: 0 => _
wordStack: .WordStack => _
gas: Gas => _
log: _
callDepth: _
refund: _ => _
storage:
0 |-> Root
(#hashedLocation("Solidity", 1, Lad) |-> Dai_l
(#hashedLocation("Solidity", 2, Lad) |-> Sin_l
(#hashedLocation("Solidity", 3, I) |-> ((#IlkStruct Rate_i Art_i) => (#IlkStruct Risk Art_i))
(#hashedLocation("Solidity", 4, I Guy) |-> (#UrnStruct Gem_u Ink_u Art_u)
5 |-> Tab
6 |-> Vice
  _:Map
activeaccounts:
accounts:
requires:
  andBool Gas >Int 100000
  
  // storage data
  andBool #rangeAddress(Lad)
  andBool #rangeSInt(256, Dai_l)
  andBool #rangeSInt(256, Sin_l)
  andBool #rangeSInt(256, Rate_i)
  andBool #rangeSInt(256, Art_i)
  andBool #rangeSInt(256, Gem_u)
  andBool #rangeSInt(256, Ink_u)
  andBool #rangeSInt(256, Art_u)
  andBool #rangeSInt(256, Tab)
  andBool #rangeSInt(256, Vice)

  // call data
  andBool #rangeBytes(32, I)  
  andBool #rangeBytes(32, What)
  andBool #rangeSInt(256, Risk)

  // success conditions (in order):
  // TODO correct equality check
  andBool (What ==K "rate")

attribute:

